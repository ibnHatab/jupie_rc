
#+STARTUP: showeverything
#+TITLE: Mini Jupiter RC-Car



* HW Platform

** Paspberry Pi 4b

*** Grove IMU 9DOF

	| IMU | RPi4      | Col   |
	|-----+-----------+-------|
	| GND | 06 GND    | Black |
	| VCC | 02 5V     | Red   |
	| SDA | 03 SDA1   | White |
	| SCL | 05 SDL1   | Yelow |
	| INT | 08 GPIO14 | Blue  |
	|     |           |       |


** Actuators

*** Orientation
	- ros-driver_mpu9250
	- ros-calibration_imu
	- imu_filter_madgwick

*** Calibration
	Magnetometer, Timisoara
	: rosrun calibration_imu magnetometer
	- total field strength, in nT: 48735.3 nT
	  #+begin_example

calibration units: tesla (T)

 1.0704277446 -0.0554687100 -0.0751259770 -0.0001229154
-0.0554687100  0.9700723220  0.0656101161 -0.0002405948
-0.0751259770  0.0656101161  0.8717398362 -0.0001045596
 0.0000000000  0.0000000000  0.0000000000  1.0000000000

	  #+end_example
	Accelerometer
	#+begin_example
calibration units: m/s^2

 1.000546  0.000000  0.000000 -0.249843
 0.000000  0.997507  0.000000 -0.155362
 0.000000  0.000000  0.982808  0.067903
 0.000000  0.000000  0.000000  1.000000
	#+end_example

** Dynamic frame

** Launch
*** Host
	: roslaunch imu_filter_madgwick imu_filter_madgwick.launch

*** jupie_rc ROS master
	: export ROS_MASTER_URI=http://user:11311/
	: roslaunch jupie jupie_rc.launch publish_raw:=false


** Arduino ECU
   Development Board Arduino Nano Compatible (ATmega328p + CH340)
   hadles motor and direction servo PWM and rotary encoder.
   It use old bootloader compatible with arduino:avr:pro BSP.

*** Interface
   - add rosserial module
	 : git clone https://github.com/ros-drivers/rosserial.git
   - generate library bindings and messages
     : rosrun rosserial_arduino make_libraries.py ~/Arduino/libraries/

   - compile and upload sketch file with arduino/Makefile
	 : arduino-cli sketch new hello_node
	 : make SRC=hello_node/ build
	 Stop serial node and upload firmware
	 : make SRC=hello_node/ upload
	 Start serial node and test
	 : rostopic echo /chatter

** NANO v3 AtMega 328p development board, compatible with Arduino

*** GY-302 Ligth sensor

	| LS   | AR  | Col    |
	|------+-----+--------|
	| VCC  | +5v | Red    |
	| GND  | GND | Brown  |
	| SCL  | A4  | Orange |
	| SDA  | A5  | Yellow |
	| ADDR | NUL | Green  |
	

*** IR sensor
	| LS  | AR  | Col  |
	|-----+-----+------|
	| VCC | +5v | Grey |
	| GND | GND | Mow  |
	| S   | A5  | Blue |

** Servo
	| Srv | AR  | Col    |
	|-----+-----+--------|
	| GND | GND | Black  |
	| PWM | D9  | Orange |
	| PWM | D6  | Yellow |

** Battery
   - LiPo 2S 7.4v 37Wh

*** Effective idle power 8v*385mA (3W)
	- Rpi4 5v*1010mA (5.1W)
	- Arduino 5v*33mA (1.65W)
	Max at 6.7W approx 5h
	- Motor and servo ??

* REFERENCES
  - [1] Development of a mechatronical platform for AUTOSAR
    The ball-balancing robot Master of Science Thesis, ANDRÃ‰ ALSTRIN, EMIL SUNDELL
	https://publications.lib.chalmers.se/records/fulltext/225052/225052.pdf

* TODO FIXES [0/4]
  - [ ] recalibrate gravitometer
  - [ ] move filter to RC
  - [ ] Launches main modules for work in autonomous mode
  - [ ] the base controller, uses dwa_local_planner (by default included in launch)
  - [ ] sphinx documentation reindexing ref. [1]
